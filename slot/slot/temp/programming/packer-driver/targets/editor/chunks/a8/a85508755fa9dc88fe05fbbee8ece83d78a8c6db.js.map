{"version":3,"sources":["file:///C:/Cocos/solt/assets/scripts/controllers/GameController.ts"],"names":["_decorator","Component","instantiate","Layout","Node","Prefab","resources","Animation","Label","MusicController","GameService","FunctionUtils","gameService","functionUtils","ccclass","property","GameController","type","layer1Pics","layer2Pics","layer3Pics","bingoTime","throttledStartGame","start","throttle","startGame","bind","load","getPicturePath","err","prefab","newNode1","newNode2","newNode3","push","layout1","node","addChild","layout2","layout3","audioManager","playRollingMusic","removeChilds","resetLayout","rollPicture","Promise","all","tweenPictures","then","checkResult","bingoNode","active","playBingoMusic","getChildByName","getComponent","string","toString","goStart","ani","handleBar1","play"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Layout, Node, Prefab, resources, tween, Vec3, Animation, Label } from 'cc';\r\nimport { MusicController } from './MusicController';\r\nimport { GameService } from '../services/GameService';\r\nimport { FunctionUtils } from '../../utils/FunctionUtils';\r\nconst gameService = new GameService()\r\nconst functionUtils = new FunctionUtils()\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    @property({type:Layout})\r\n    private layout1:Layout = null\r\n\r\n    @property({type:Layout})\r\n    private layout2:Layout = null\r\n\r\n    @property({type:Layout})\r\n    private layout3:Layout = null\r\n\r\n    @property({type:Node})\r\n    private handleBar1:Node = null\r\n\r\n    @property({type:MusicController})\r\n    private audioManager:MusicController = null \r\n\r\n    @property({type:Node})\r\n    private bingoNode:Node = null\r\n\r\n\r\n\r\n\r\n    private layer1Pics:Node[] = []\r\n\r\n    private layer2Pics:Node[] = []\r\n\r\n    private layer3Pics:Node[] = []\r\n\r\n    private bingoTime = 0\r\n\r\n    private throttledStartGame:() => void\r\n\r\n\r\n\r\n\r\n    start() {\r\n        this.throttledStartGame = functionUtils.throttle(this.startGame.bind(this), 5000)\r\n\r\n        resources.load(`prefabs/${gameService.getPicturePath(1)}`, Prefab, (err, prefab)=>{\r\n            const newNode1 = instantiate(prefab)\r\n            const newNode2 = instantiate(prefab)\r\n            const newNode3 = instantiate(prefab)\r\n\r\n            this.layer1Pics.push(newNode1)\r\n            this.layer2Pics.push(newNode2)\r\n            this.layer3Pics.push(newNode3)\r\n\r\n            this.layout1.node.addChild(newNode1)\r\n            this.layout2.node.addChild(newNode2)\r\n            this.layout3.node.addChild(newNode3)\r\n        })\r\n    }\r\n\r\n    async startGame(){\r\n        this.audioManager.playRollingMusic()\r\n        gameService.removeChilds(this.layout1, this.layer1Pics)\r\n        gameService.removeChilds(this.layout2, this.layer2Pics)\r\n        gameService.removeChilds(this.layout3, this.layer3Pics)\r\n\r\n        gameService.resetLayout(this.layout1)\r\n        gameService.resetLayout(this.layout2)\r\n        gameService.resetLayout(this.layout3)\r\n        \r\n\r\n        await gameService.rollPicture(this.layout1, this.layer1Pics)\r\n        await gameService.rollPicture(this.layout2, this.layer2Pics)\r\n        await gameService.rollPicture(this.layout3, this.layer3Pics)\r\n        \r\n        Promise.all([\r\n\r\n            gameService.tweenPictures(this.layout1),\r\n            gameService.tweenPictures(this.layout2),\r\n            gameService.tweenPictures(this.layout3)\r\n\r\n        ]).then(()=>{\r\n\r\n            if(gameService.checkResult(this.layer1Pics, this.layer2Pics, this.layer3Pics)){\r\n                this.bingoNode.active = true\r\n                this.audioManager.playBingoMusic()\r\n                this.bingoNode.getChildByName('Score').getComponent(Label).string = (++this.bingoTime*100).toString()\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    goStart(){\r\n        let ani = this.handleBar1.getComponent(Animation)\r\n        ani.play('handelbar')\r\n        this.throttledStartGame()\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]}